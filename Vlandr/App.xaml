<Application x:Class="Vlandr.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Vlandr"
             xmlns:custom="clr-namespace:Vlandr.ChatMessage"
             StartupUri="LoginForm.xaml">
    <Application.Resources>
       
        <ResourceDictionary>
            
            
            <ResourceDictionary.MergedDictionaries>
                <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <!-- Accent and AppTheme setting -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <!-- Order is important -->
            </ResourceDictionary.MergedDictionaries>
            <FontFamily x:Key="FontAwesome">/Fonts/fontawesome-webfont.ttf#FontAwesome</FontFamily>

            
            
            <Style TargetType="Border" x:Key="BorderStyle1">
                <Setter Property="Background" Value="LightGray"/>
                <Setter Property="Margin" Value="10,10,10,10"/>
                <Setter Property="BorderBrush" Value="Gainsboro"/>
                <Setter Property="CornerRadius" Value="5"/>
            </Style>
            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2"
                       SnapsToDevicePixels="true"
                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                       StrokeDashArray="1 2"
                       StrokeThickness="0" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="Green"></Setter>
                <Setter Property="Foreground" Value="White"></Setter>
            </Style>
            <SolidColorBrush x:Key="Button.Static.Background"
                     Color="#236a82" />

            <SolidColorBrush x:Key="Button.MouseOver.Background"
                     Color="#074f66" />

            <SolidColorBrush x:Key="Button.Pressed.Background"
                     Color="#074f66" />


            <Style x:Key="DefaultButtonStyle"
           TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
                <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />

                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="1" />
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="true"
                    CornerRadius="0">
                                <ContentPresenter x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="Green" />
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="LawnGreen"/>
                                    <Setter Property="Background" Value="{StaticResource Button.MouseOver.Background}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>





            <!--ComboBox--><!--
            <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
                <Border x:Name="PART_ContentHost" Focusable="True" />
            </ControlTemplate>
            <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
                <Setter Property="Foreground" Value="Gray" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="32" />
                                </Grid.ColumnDefinitions>
                                <Border
                          x:Name="Border"
                          Grid.ColumnSpan="2"
                          CornerRadius="0"
                          Background="{TemplateBinding Background}"
                          BorderThickness="1" />
                                <Border
                          Grid.Column="0"
                          CornerRadius="0"
                          Background="Transparent"
                          BorderBrush="Transparent"
                          BorderThickness="10" />
                                <Path
                          x:Name="Arrow"
                          Grid.Column="1"    
                          Fill="#17BAEF"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="M 0 0 L 8 12 L 16 0 Z"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="LightGray" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Gray" />
                                    <Setter Property="Foreground" Value="Gray"/>
                                    <Setter TargetName="Arrow" Property="Fill" Value="Gray" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type ComboBoxItem}">
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="Foreground" Value="Gray" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="OverridesDefaultStyle" Value="true"/>
               
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBoxItem">
                            <Border
                                  Name="Border"
                                    Padding="5"
                                    Margin="2"
                                    BorderThickness="2"
                                    CornerRadius="0"
                                    Background="Transparent"
                                    BorderBrush="Transparent" >

                                <TextBlock TextAlignment="Center">
                                        <ContentPresenter />
                                </TextBlock>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted" Value="true">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Gray"/>
                                    <Setter TargetName="Border" Property="Background" Value="Yellow"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type ComboBox}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsEnabled, 
                RelativeSource={RelativeSource AncestorType=ComboBox}}" Value="True">
                        <Setter Property="Foreground" Value="Gray"/>
                    </DataTrigger>
                </Style.Triggers>
                <Setter Property="IsReadOnly" Value="True"/>
                <Setter Property="Foreground" Value="Gray" />
                <Setter Property="IsEditable" Value="True"/>
                <Setter Property="BorderBrush" Value="Gray" />
                <Setter Property="Background" Value="White" />
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="FontSize" Value="16" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="MinWidth" Value="50"/>
                <Setter Property="MinHeight" Value="32"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <ToggleButton
                                Name="ToggleButton"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                            Foreground="Gray"
                                Style="{StaticResource ComboBoxToggleButton}"
                                Grid.Column="2"
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Release">
                                </ToggleButton>
                                <ContentPresenter
                                Name="ContentSite"
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="10,3,30,3"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center" />
                                <TextBox x:Name="PART_EditableTextBox"
                                Style="{x:Null}"
                                Template="{StaticResource ComboBoxTextBox}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Margin="3,3,23,3"
                                Focusable="True"                               
                                Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}"/>
                                <Popup
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True"
                                Focusable="False"
                                PopupAnimation="Slide">
                                    <Grid
                                  Name="DropDown"
                                  SnapsToDevicePixels="True"               
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border
                                        x:Name="DropDownBorder"
                                        Background="White"
                                        BorderThickness="1"
                                        BorderBrush="#eebf3f"/>
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>

                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                                </Trigger>
                                <Trigger Property="IsGrouping" Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                </Trigger>
                                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                    <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                    <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                                </Trigger>
                                
                                <Trigger Property="IsEditable" Value="true">
                                    <Setter Property="IsTabStop" Value="false"/>
                                    <Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
                                    <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>-->
            <!--End ComboBox-->
            <!--RadioButton-->
            <Style TargetType="{x:Type RadioButton}" >
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <BulletDecorator Background="White" Cursor="Hand">
                                <BulletDecorator.Bullet>
                                    <Grid Height="16" Width="16">
                                        <!--Define size of the Bullet-->

                                        <!--The two borders-->
                                        <Border Name="RadioOuter" Background="Transparent" BorderBrush="Gainsboro" BorderThickness="2" CornerRadius="2" />
                                        <Border CornerRadius="0" Margin="4" Name="RadioMark" Background="#17BAEF" Visibility="Hidden" />

                                    </Grid>
                                </BulletDecorator.Bullet>

                                <!--Text element-->
                                <TextBlock Margin="3,1,0,0" Foreground="Gray" FontFamily="Calibri" FontSize="25">
       <ContentPresenter />
                                </TextBlock>
                            </BulletDecorator>

                            <!--If item is checked, trigger the visibility of the mark-->
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">

                                    <!--If item is checked, trigger the visibility of the mark
and change the color of the selected bullet into a darker gray for better highlighting-->
                                    <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="RadioOuter" Property="BorderBrush" Value="#FFADADAD" />

                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <!--ScrollBAr-->
            <!--Scrollbar Thumbs-->
            <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid x:Name="Grid">
                                <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="12" Height="12" Fill="Transparent" />
                                <Border x:Name="Rectangle1" CornerRadius="10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Tag" Value="Horizontal">
                                    <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                    <Setter TargetName="Rectangle1" Property="Height" Value="10" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            
            
            <!--ScrollBars-->
            <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
                <Setter Property="Foreground" Value="LightGray" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Width" Value="10" />
                <Setter Property="Template">
                    
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="GridRoot" Width="10" Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                   <RowDefinition Height="10*" />
                                </Grid.RowDefinitions>

                                <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                    </Track.DecreaseRepeatButton>
                                </Track>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                    <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                                </Trigger>
                                <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                    <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                                </Trigger>

                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="Orientation" Value="Horizontal">
                                    <Setter TargetName="GridRoot" Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="PART_Track" Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Width" Value="Auto" />
                                    <Setter Property="Height" Value="Auto" />
                                    <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                    <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                    <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            
            
            
            
            <!--EndScrollBar-->
            <!--ListboxFriends-->
            <Style x:Key="Style2" TargetType="{x:Type Border}">
                <Setter Property="Background" Value="Transparent">
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Background" Value="#FFE3E3FB"/>
                    </Trigger>
                </Style.Triggers>

            </Style>
            
            
            
            <!--EndListBox-->
            <Style x:Key="_ListBoxItemStyle" TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border Name="_Border"
                                Padding="2"
                                SnapsToDevicePixels="true">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter TargetName="_Border" Property="Background" Value="Yellow"/>
                                    <Setter Property="Foreground" Value="Red"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--HintTextBox-->
            <Style TargetType="{x:Type TextBox}" x:Key="HintTextBox">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="MaxLines" Value="1"/>
                <Setter Property="Foreground" Value="Gray"/>
                <Setter Property="TextAlignment" Value="Left"/>
            </Style>
            <!--EndHintTextBox-->
            <BooleanToVisibilityConverter x:Key="BoolToVis"  />

            <custom:VisToBool x:Key="VisibleIfTrue" Inverted="True" Not="False" />

            <custom:VisToBool x:Key="VisibleIfNotTrue" Inverted="True" Not="True" />
        </ResourceDictionary>

        

    </Application.Resources>
</Application>
